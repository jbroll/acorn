#!/usr/bin/env tclkit8.6
#
lappend auto_path ./lib arec/lib

package require tcltest
package require acorn

interp alias {} print {} puts

set mask 21			; # The mask is surface 21?
set mm2inch 25.4

set slitX aper_min 
set slitY aper_max 

source /Users/john/src/jbr.tcl/starbase.tcl
source /Users/john/src/jbr.tcl/strtod.tcl
source /Users/john/src/jbr.tcl/2d.tcl

set model zmx-models/p24_110912af_072512ac_inch.zmx
#acorn::ZMX create B source zmx-models/p8_110912af_072512ac.zmx

acorn::ZMX create B source $model

B config 1


set argv [lassign $argv action]


proc maskXY { ax ay } {
    acorn::Rays create ray1 1
    acorn::Rays create trak 79

    ray1 set kz 1.0
    ray1 angles : $ax $ay

    set w  [B get wavelength 1 wave]

    B 1 set aper_type none
    B trace ray1 {} [expr $w*10000] 0 trak

    set x [trak get 20 px]
    set y [trak get 20 py]
    set v [trak get 20 vignetted]

    rename ray1 {}
    rename trak {}

    return [list $x $y $v]
}

proc counts { mag exptime } {
    set throughput	0.25
    set counts0		1.09e10
    set	area	[expr { 6.5*6.5 }]

    expr { int($throughput * $counts0 * pow(10, -0.4*$mag) * $exptime * $area) }
}

switch $action {

 image {
    lassign $argv mask 

    set scale [expr { 1.0/($mm2inch*1000/15) }]
    set ratio [expr { (6.5*6.5) / (3.14159*3.25*3.25) }]
    set seeing 0.7

    foreach file [glob bino/E.*] {
	set spectrum [regsub -all {[^.0-9 ]} [cat $file] {}]
	set sum      [sum $spectrum]
	set spectrum [lmap x $spectrum { expr { $x/$sum } }]

	lappend waves $spectrum
	lappend count $sum
    }
    set wave [lmap x [regsub -all {[^.0-9 ]} [cat bino/JohnFileWave.dat] {}] { expr { $x*10000 } }]

    set spectrum [regsub -all {[^.0-9 ]} [cat bino/JohnFileSky.dat] {}]
    set skysum      [sum $spectrum]
    set skys     [lmap x $spectrum { expr { $x/$skysum } }]

    set image [acorn::malloc [expr { 2*4096*4096 }]]

    starbase_read Slits $mask
    set RA [strtod [starbase_hdrget Slits ra]]
    set DC [strtod [starbase_hdrget Slits dec]]
    set PA [strtod [starbase_hdrget Slits pa]]

    starbase_foreachrow Slits -colvars {

	# Compute the angles of ra and dec
	#
	set ra [expr { ([strtod $ra] -$RA)*15*cos($DC/57.2957795) }]
	set dc [expr {  [strtod $dec]-$DC }]

	lassign [2d::transform [2d::rotate [expr { -$PA }] d] $ra $dc] ax ay
	lassign [maskXY $ax $ay] mx my

	B 21 set aper_xoff $mx
	B 21 set aper_yoff $my

	B 21 set $slitX [expr { 0.084/$mm2inch }]
	B 21 set $slitY [expr { 0.840/$mm2inch }]

	set nth [expr { ($row-1) % [llength $waves] }]

	set spectrum 	[lindex $waves  $nth]
	set counts   	[expr { int([lindex $count $nth] * $ratio ) }]
	set box 	[expr int(sqrt($counts))]

	puts "[format "%8d %6d %7.3f %7.3f %7.3f %7.3f %7.3f %7.3f" $counts $box $ra $dc $x $y $width $height] : [format "%7.3f %7.3f %7.3f %7.3f %d" $ax $ay {*}[maskXY $ax $ay]]"

	continue

	acorn::mkrays rays nx $box x0 -128 x1 128 ny $box y0 -128 y1 128 circle 1 intensity 1
		      rays angles : $ax $ay normal $seeing 

	rays waves $spectrum	 		; # Add wavelength numbers to rays from spectrum probability function

	B trace rays {} $wave 6
	rays bin ushort $image 4096 4096 $scale $scale
	rename rays {}

	set counts   	[expr { int($skysum * $ratio * (5*0.5)) }]
	set box 	[expr int(sqrt($counts))]

	acorn::mkrays rays nx $box x0 -128 x1 128 ny $box y0 -128 y1 128 circle 1 intensity 1
		      rays angles : $ax $ay uniform 0.25 2.5
	rays waves $skys
	B trace rays {} $wave 6

	rays bin ushort $image 4096 4096 $scale $scale
	rename rays {}
    }

    acorn::poisson ushort $image 4096 4096
    acorn::noise   ushort $image 4096 4096 1000 3
    acorn::fits    ushort $image 4096 4096

    echo [fits 16 { 4096 4096 } { 1 1 } { 0 0 } $image {}] > [file root $mask]-[starbase_name Slits].fits b
 }
 image-hecto {
    lassign $argv file mask field wavel

    if { $field == "" } { set field 1 }
    if { $wavel == "" } { set wavel 1 }

    set x [B get field $field x]
    set y [B get field $field y]
    set w [B get wavelength $wavel wave]

    starbase_readfp T [set fp [open $file]]

    set crval1 [starbase_hdrget T crval1]
    set crpix1 [starbase_hdrget T crpix1]
    set cdelt1 [starbase_hdrget T cdelt1]

    set targets [starbase_select T { row } where { $target ne "sky" && $target ne "unused" }]

    gets $fp line
    set waves [split [string trim [read $fp]] \n]

    foreach i [iota 1 [llength [lindex $waves 0]]] {			; # Create the spectrum wavelength list
	lappend wave [expr { ($i-$crpix1) * $cdelt1 + $crval1 }]
    }

    set scale  [expr { 1.0/($mm2inch*1000/15) }]

    set image [acorn::malloc [expr { 2*4096*4096 }]]

    set seeing 0.7

    starbase_read Slits $mask
    set RA [strtod [starbase_hdrget Slits ra]]
    set DC [strtod [starbase_hdrget Slits dec]]
    set PA [strtod [starbase_hdrget Slits pa]]

    starbase_foreachrow Slits -colvars {

	# Compute the angles of ra and dec
	#
	set ra [expr { ([strtod $ra] -$RA)*15*cos($DC/57.2957795) }]
	set dc [expr {  [strtod $dec]-$DC }]

	lassign [2d::transform [2d::rotate [expr { -$PA }] d] $ra $dc] ax ay
	lassign [maskXY $ax $ay] mx my

	B 21 set aper_xoff $mx
	B 21 set aper_yoff $my

	B 21 set $slitX [expr { 0.084/$mm2inch }]
	B 21 set $slitY [expr { .840/$mm2inch }]

	set mag [expr rand()*3+19.5]
	set counts [counts $mag 1800]
	set box [expr int(sqrt($counts))]

	puts "[format %.2f $mag] $counts $box [format "%.3f %.3f" $ra $dc] $x $y $width $height [format "%.3f %.3f %d" {*}[maskXY $ax $ay]]"


	acorn::mkrays rays nx $box x0 -128 x1 128 ny $box y0 -128 y1 128 circle 1 intensity 1
		      rays angles : $ax $ay normal $seeing

	rays waves [lindex $waves [lindex $targets $row-1]-1] 		; # Add wavelength numbers to rays from spectrum probability function


	B trace rays {} $wave 6
	acorn::prays rays

	rays bin ushort $image 4096 4096 $scale $scale

	rename rays {}
    }

    acorn::poisson ushort $image 4096 4096
    acorn::noise   ushort $image 4096 4096 1000 3
    acorn::fits    ushort $image 4096 4096

    echo [fits 16 { 4096 4096 } { 1 1 } { 0 0 } $image {}] > [file root $mask]-[starbase_name Slits].fits b
 }
 print { B print }
 prays {
    acorn::prays rays
 }
 trak {
    lassign $argv ax ay

    acorn::Rays create ray1 1
    acorn::Rays create trak 79

    ray1 set kz 1.0
    ray1 angles : $ax $ay

    set w1 [B get wavelength 1 wave]
    set w  $w1

    B 1 set aper_type none
    B trace ray1 {} [expr $w*10000] 0 trak

    #acorn::prays ray1
    #puts ""
    acorn::prays trak %.3f
 }
 plot  -
 trace { 
    lassign $argv field wavel

    if { $field == "" } { set field 1 }
    if { $wavel == "" } { set wavel 1 }

    set ax [B get field $field x]
    set ay [B get field $field y]
    set  w [B get wavelength $wavel wave]

    acorn::mkrays rays nx 50 x0 -128 x1 128 ny 50 y0 -128 y1 128 circle 1
	          rays angles : $ax $ay 


    B trace rays {} [expr $w*10000] 16

    puts "RayTrace $model"
    puts ""
    puts "field    	$ax $ay"
    puts "wavelength	$w"
    puts ""

    if { $action eq "plot" } {
	foreach {*}[rays stat] {}

	set range [expr { max($xrange, $yrange) }]
	set xmin [expr $x - $range/2]
	set xmax [expr $x + $range/2]
	set ymin [expr $y - $range/2]
	set ymax [expr $y + $range/2]

	set plot [list | "row !v | plottable size 8 8 x,y marker circle xaxis min $xmin max $xmax yaxis min $ymin max $ymax"]
    } else { 
	set plot {}
    }

    acorn::prays rays {*}$plot
 }
}

